using System;
using System.Collections;
using DeepCore.Client.Misc;
using ExitGames.Client.Photon;
using MelonLoader;
using Photon.Realtime;
using UnityEngine;
using VRC.SDKBase;

namespace DeepCore.Client.Module.Exploits
{
	// Token: 0x0200006A RID: 106
	internal class EarRape
	{
		// Token: 0x0600021F RID: 543 RVA: 0x0000E3E4 File Offset: 0x0000C5E4
		public static void State(bool s)
		{
			if (s)
			{
				EarRape.Earape = s;
				MelonCoroutines.Start(EarRape.Start());
				DeepConsole.Log("E1", "E1 Started.");
				return;
			}
			EarRape.Earape = s;
		}

		// Token: 0x06000220 RID: 544 RVA: 0x0000E410 File Offset: 0x0000C610
		public static IEnumerator Start()
		{
			while (EarRape.Earape)
			{
				byte[] array = Convert.FromBase64String(ConfManager.E1Payload.Value);
				Array array2 = new byte[4];
				byte[] bytes = BitConverter.GetBytes(Networking.GetServerTimeInMilliseconds());
				Buffer.BlockCopy(array2, 0, array, 0, 4);
				Buffer.BlockCopy(bytes, 0, array, 4, 4);
				for (int i = 0; i < 5; i++)
				{
					PhotonUtil.OpRaiseEvent(1, array, new RaiseEventOptions
					{
						field_Public_EventCaching_0 = 0,
						field_Public_ReceiverGroup_0 = 0
					}, default(SendOptions));
				}
				yield return new WaitForSecondsRealtime(0.1f);
			}
			yield break;
		}

		// Token: 0x06000221 RID: 545 RVA: 0x0000E418 File Offset: 0x0000C618
		public static void Teste1()
		{
			byte[] array = Convert.FromBase64String(ConfManager.E1Payload.Value);
			Array array2 = new byte[4];
			byte[] bytes = BitConverter.GetBytes(Networking.GetServerTimeInMilliseconds());
			Buffer.BlockCopy(array2, 0, array, 0, 4);
			Buffer.BlockCopy(bytes, 0, array, 4, 4);
			for (int i = 0; i < 5; i++)
			{
				PhotonUtil.OpRaiseEvent(1, array, new RaiseEventOptions
				{
					field_Public_EventCaching_0 = 0,
					field_Public_ReceiverGroup_0 = 0
				}, default(SendOptions));
			}
		}

		// Token: 0x0400012C RID: 300
		public static bool Earape;
	}
}
