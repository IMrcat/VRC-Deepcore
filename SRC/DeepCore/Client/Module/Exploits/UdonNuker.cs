using System;
using System.Collections;
using Il2CppSystem.Collections.Generic;
using MelonLoader;
using UnityEngine;
using VRC.Udon;

namespace DeepCore.Client.Module.Exploits
{
	// Token: 0x02000066 RID: 102
	internal class UdonNuker
	{
		// Token: 0x06000213 RID: 531 RVA: 0x0000E244 File Offset: 0x0000C444
		public static IEnumerator Nuke()
		{
			foreach (UdonBehaviour udonBehaviour in OnLoadedScaneManager.udonBehaviours)
			{
				foreach (KeyValuePair<string, List<uint>> keyValuePair in udonBehaviour._eventTable)
				{
					udonBehaviour.SendCustomNetworkEvent(0, keyValuePair.key);
					UdonNuker.Cunter++;
				}
			}
			DeepConsole.Log("UD", "Nuked " + UdonNuker.Cunter.ToString() + " udon.");
			UdonNuker.Cunter = 0;
			yield break;
		}

		// Token: 0x06000214 RID: 532 RVA: 0x0000E24C File Offset: 0x0000C44C
		public static void State(bool s)
		{
			if (s)
			{
				UdonNuker.nukeme = true;
				MelonCoroutines.Start(UdonNuker.Keystop());
				MelonCoroutines.Start(UdonNuker.UdonKill());
				return;
			}
			UdonNuker.nukeme = false;
		}

		// Token: 0x06000215 RID: 533 RVA: 0x0000E274 File Offset: 0x0000C474
		public static IEnumerator Keystop()
		{
			while (!Input.GetKeyDown(27))
			{
				yield return null;
			}
			UdonNuker.nukeme = false;
			yield break;
			yield break;
		}

		// Token: 0x06000216 RID: 534 RVA: 0x0000E27C File Offset: 0x0000C47C
		public static IEnumerator UdonKill()
		{
			while (UdonNuker.nukeme)
			{
				int i;
				for (int f = 0; f < OnLoadedScaneManager.udonBehaviours.Length; f = i + 1)
				{
					foreach (UdonBehaviour udonBehaviour in OnLoadedScaneManager.udonBehaviours)
					{
						foreach (KeyValuePair<string, List<uint>> keyValuePair in udonBehaviour._eventTable)
						{
							udonBehaviour.SendCustomNetworkEvent(0, keyValuePair.Key);
						}
					}
					if (!UdonNuker.nukeme)
					{
						break;
					}
					yield return new WaitForSeconds(0.1f);
					i = f;
				}
				yield return new WaitForSeconds(0.1f);
			}
			yield break;
		}

		// Token: 0x04000129 RID: 297
		public static int Cunter;

		// Token: 0x0400012A RID: 298
		public static bool nukeme;
	}
}
