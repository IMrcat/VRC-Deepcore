using System;
using ReMod.Core.VRChat;
using UnityEngine;

namespace DeepCore.Client.Module.Exploits
{
	// Token: 0x02000064 RID: 100
	internal class SpyCamera
	{
		// Token: 0x0600020B RID: 523 RVA: 0x0000DBCC File Offset: 0x0000BDCC
		public static void Toggle(bool state)
		{
			if (state)
			{
				SpyCamera.EnableSpyCamera();
				return;
			}
			SpyCamera.DisableSpyCamera();
		}

		// Token: 0x0600020C RID: 524 RVA: 0x0000DBDC File Offset: 0x0000BDDC
		private static void EnableSpyCamera()
		{
			if (SpyCamera.spyCam != null)
			{
				return;
			}
			SpyCamera.spyCam = new GameObject("SpyCam");
			Camera camera = SpyCamera.spyCam.AddComponent<Camera>();
			camera.fieldOfView = 60f;
			camera.nearClipPlane = 0.1f;
			camera.farClipPlane = 1000f;
			GameObject gameObject = PlayerExtensions.GetVRCPlayer().gameObject;
			if (gameObject != null)
			{
				SpyCamera.spyCam.transform.SetParent(gameObject.transform);
				SpyCamera.spyCam.transform.localPosition = new Vector3(0f, 2f, -3f);
				SpyCamera.spyCam.transform.localRotation = Quaternion.Euler(10f, 0f, 0f);
			}
			SpyCamera.isActive = true;
		}

		// Token: 0x0600020D RID: 525 RVA: 0x0000DCA5 File Offset: 0x0000BEA5
		private static void DisableSpyCamera()
		{
			if (SpyCamera.spyCam != null)
			{
				Object.Destroy(SpyCamera.spyCam);
				SpyCamera.spyCam = null;
				SpyCamera.isActive = false;
			}
		}

		// Token: 0x0400011A RID: 282
		public static GameObject spyCam;

		// Token: 0x0400011B RID: 283
		public static bool isActive;
	}
}
